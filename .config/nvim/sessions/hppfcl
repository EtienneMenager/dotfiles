let SessionLoad = 1
let s:so_save = &g:so | let s:siso_save = &g:siso | setg so=0 siso=0 | setl so=-1 siso=-1
let v:this_session=expand("<sfile>:p")
silent only
silent tabonly
cd ~/dev/control/hpp-fcl
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
argglobal
%argdel
edit python/gjk.cc
argglobal
balt python/collision-geometries.cc
setlocal fdm=manual
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=20
setlocal fen
silent! normal! zE
let &fdl = &fdl
let s:l = 95 - ((13 * winheight(0) + 19) / 39)
if s:l < 1 | let s:l = 1 | endif
keepjumps exe s:l
normal! zt
keepjumps 95
normal! 0154|
lcd ~/dev/control/hpp-fcl
tabnext 1
badd +94 ~/dev/control/hpp-fcl/python/gjk.cc
badd +1 ~/dev/control/hpp-fcl/python/fcl.cc
badd +1 ~/dev/control/hpp-fcl/include/hpp/fcl/shape/convex.h
badd +493 ~/dev/control/hpp-fcl/include/hpp/fcl/shape/geometric_shapes.h
badd +74 ~/dev/control/hpp-fcl/include/hpp/fcl/data_types.h
badd +76 ~/dev/control/hpp-fcl/python/collision-geometries.cc
badd +199 ~/dev/control/hpp-fcl/include/hpp/fcl/narrowphase/gjk.h
if exists('s:wipebuf') && len(win_findbuf(s:wipebuf)) == 0 && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
  silent exe 'bwipe ' . s:wipebuf
endif
unlet! s:wipebuf
set winheight=1 winwidth=20 shortmess=filnxtToOFcI
let s:sx = expand("<sfile>:p:r")."x.vim"
if filereadable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &g:so = s:so_save | let &g:siso = s:siso_save
set hlsearch
doautoall SessionLoadPost
unlet SessionLoad
" vim: set ft=vim :
